#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

##
## Interconnect Types
##
##   This is a library of generic inter-component interactions.
##

apiVersion: skupperx.io/compose/v1alpha1
kind: Block
type: skupperx.io/connector
metadata:
  name: library/tcp-connection
  annotations:
    platform: skupper-v2
spec:
  config:
    keyPrefix:
      type: string-name
      description: "Prefix annotation for the generated routing keys"
      default: tcp
    distribution:
      type: enum
      typeValues: ["balanced", "closest"]
      description: "Distribution algorithm used in the network for service traffic"
      default: balanced
    priority:
      type: enum
      typeValues: [lowest, "1", "2", "3", normal, "5", "6", "7", "8", "9", highest]
      description: "Priority used to forward service traffic through the network"
      default: normal
    protocol:
      type: string-name
      description: "Application protocol that runs over the transport"
      default: none
    connectorType:
      type: enum
      typeValues: ["host", "selector"]
      description: "How the connector locates target processes"
      default: selector
    networkPolicyOnAcceptor:
      type: bool
      description: "Generate network policy to match the acceptor"
      default: false
    networkPolicyOnConnector:
      type: bool
      description: "Generate network policy to match the connector"
      default: false
    vanFlowTransport:
      type: bool
      description: "Generate vanFlow transport events"
      default: false
    vanFlowProtocol:
      type: bool
      description: "Generate vanFlow protocol events"
      default: false
    requiredAverageRate:
      type: numeric
      description: Expected average bandwidth usage
    requiredPeakRate:
      type: numeric
      description: Expected peak bandwidth usage
    requiredLatency:
      type: numeric
      description: Minimum expected network latency
  interfaces:
  - name: acceptor
    role: accept
  - name: connector
    role: connect
  bodyStyle: simple
  body:
  - affinity: [acceptor]
    targetPlatforms: [sk2]
    description: "Interface to Skupper-v2 acceptors on kubernetes sites"
    template: |
      ---
      apiVersion: skupper.io/v2alpha1
      kind: Connector
      metadata:
        name: connector-{{.ident}}
      spec:
        type: tcp
        selector: {{$affblock.selectorKey}}={{$affblock.selectorValue}}
        port: {{$affif.port}}
        routingKey: {{.keyPrefix}}{{.name}}
      {{- if .networkPolicyOnAcceptor}}
      ---
      apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      metadata:
        name: ingress-policy-{{.ident}}
      spec:
        podSelector:
          matchLabels:
            {{$affblock.selectorKey}} : {{$affblock.selectorValue}}
        policyTypes:
        - Ingress
        ingress:
        - from:
          - podSelector:
              matchLabels:
                skupper.io/component: router
          ports:
          - protocol: TCP
            port: {{$affif.port}}
      {{-end}}
  - affinity: [connector]
    targetPlatforms: [sk2]
    description: "Interface to Skupper-v2 connectors on kubernetes sites"
    template: |
      ---
      apiVersion: skupper.io/v2alpha1
      kind: Listener
      metadata:
        name: listener-{{.ident}}
      spec:
        type: tcp
        host: {{$affif.host}}
        port: {{$affif.port}}
        routingKey: {{.keyPrefix}}{{.name}}
      {{- if .networkPolicyOnConnector}}
      ---
      apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      metadata:
        name: egress-policy-{{.ident}}
      spec:
        podSelector:
          matchLabels:
            {{$affblock.selectorKey}} : {{$affblock.selectorValue}}
        policyTypes:
        - Egress
        egress:
        - to:
          - podSelector:
              matchLabels:
                skupper.io/component: router
          ports:
          - protocol: TCP
            port: {{$affif.port}}
      {{-end}}

##
## NearestPrime transaction processor
##

---
apiVersion: skupperx.io/compose/v1alpha1
kind: Block
metadata:
  name: nearestprime
type: skupperx.io/component
spec:
  config:
    replicas:
      type: numeric
      default: 1
    selectorKey:
      type: string
      default: application
    selectorValue:
      type: string
      default: nearestprime
  interfaces:
  - name: postgres
    role: connect
    data:
      host: database
      port: 5432
  - name: control
    role: accept
    data:
      port: 8000
  bodyStyle: simple
  body:
  - targetPlatforms: [sk2, podman-sk2]
    template: |
      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: nearestprime-{{.ident}}
      spec:
        replicas: {{.replicas}}
        selector:
          matchLabels:
            {{.selectorKey}}: {{.selectorValue}}
        template:
          metadata:
            labels:
              {{.selectorKey}}: {{.selectorValue}}
          spec:
            containers:
            - name: nearestprime
              image: quay.io/tedlross/nearestprime:latest
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /healthz
                  port: {{$localif.control.port}}
                  scheme: HTTP
                initialDelaySeconds: 60
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              ports:
              - containerPort: {{$localif.control.port}}
              env:
              - name: DDW_USER
                value: access
              - name: DDW_PASSWORD
                value: demopass
              - name: DDW_HOST
                value: {{$localif.postgres.host}}
              - name: DDW_SITENAME
                value: {{$site.name}}

##
## PostgresSql Database
##
---
apiVersion: skupperx.io/compose/v1alpha1
kind: Block
metadata:
  name: postgres/engine
type: skupperx.io/component
spec:
  config:
    selectorKey:
      type: string-name
      default: block
    selectorValue:
      type: string-name
      default: postgresql
    POSTGRES_DB:
      type: string
      default: demo-db
    POSTGRES_USER:
      type: string
      default: access
    POSTGRES_PASSWORD:
      type: string
      default: demopass
    imageVersion:
      type: string
      default: "15"
  interfaces:
  - name: postgres
    role: accept
    maxBindings: unlimited
    data:
      port: 5432
  - name: files
    role: mount
    data:
      volumeSize: 5Gi
  bodyStyle: simple
  body:
  - template: |
      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: postgres-{{.ident}}
      spec:
        replicas: 1
        selector:
          matchLabels:
            {{.selectorKey}}: {{.selectorValue}}
        template:
          metadata:
            labels:
              {{.selectorKey}}: {{.selectorValue}}
          spec:
            containers:
            - name: postgres
              image: postgres:{{.imageVersion}}
              imagePullPolicy: "IfNotPresent"
              ports:
              - containerPort: {{$localif.postgres.port}}
              env:
              - name: POSTGRES_DB
                value: {{.POSTGRES_DB}}
              - name: POSTGRES_USER
                value: {{.POSTGRES_USER}}
              - name: POSTGRES_PASSWORD
                value: {{.POSTGRES_PASSWORD}}
              volumeMounts:
              - mountPath: /var/lib/postgresql/data
                name: postgresdb
            volumes:
            - name: postgresdb
              emptyDir:
                sizeLimit: {{$localif.files.volumeSize}}

---
apiVersion: skupperx.io/compose/v1alpha1
kind: Block
metadata:
  name: postgres/volume
type: skupperx.io/connector
spec:
  config:
    storageClass:
      type: string
      default: ibmc-vpc-block-10iops-tier
    accessModes:
      type: string
      default: ReadWriteMany
    capacity:
      type: string
      default: 5Gi
  interfaces:
  - name: mountpoint
    role: mount
  bodyStyle: simple
  body:
  - affinity: mountpoint
    template: |
      ---
      apiVersion: v1
      kind: PersistentVolume
      metadata:
        name: postgres-pv-{{.ident}}
      spec:
        storageClassName: {{.storageClass}}
        capacity:
          storage: {{.capacity}}
        accessModes:
        - {{.accessModes}}
        hostPath:
          path: "/mnt/data"
      ---
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: postgres-pvc-{{.ident}}
      spec:
        storageClassName: {{.storageClass}}
        accessModes:
        - {{.accessModes}}
        resources:
          requests:
            storage: {{$affif.volumeSize}}

---
apiVersion: skupperx.io/compose/v1alpha1
kind: Block
metadata:
  name: postgres/subsystem
type: skupperx.io/component
spec:
  interfaces:
  - name: postgres
    role: accept
  bodyStyle: composite
  body:
  - name: database
    block: postgres/engine
    siteClasses:
    - hq
    bindings:
    - interface: postgres
      super: postgres
  - name: store
    block: postgres/volume
    bindings:
    - interface: mountpoint
      block: database
      blockInterface: files

---
apiVersion: skupperx.io/compose/v1alpha1
kind: Block
metadata:
  name: nearestprime/main
type: skupperx.io/component
spec:
  interfaces:
  - name: request
    role: accept
  bodyStyle: composite
  body:
  - name: database
    block: postgres/subsystem
    siteClasses:
    - hq
  - name: worker
    block: nearestprime
    config:
      replicas: 2
    siteClasses:
    - worker
    bindings:
    - interface: control
      super: request
  - name: worker-to-database
    block: library/tcp-connection
    config:
      keyPrefix: pg
      protocol: postgres
      connectorType: selector
      networkPolicyOnAcceptor: true
      networkPolicyOnConnector: true
    bindings:
    - interface: connector
      block: worker
      blockInterface: postgres
    - interface: acceptor
      block: database
      blockInterface: postgres

---
apiVersion: skupperx.io/compose/v1alpha1
kind: Block
metadata:
  name: nearestprime/container
type: skupperx.io/toplevel
spec:
  bodyStyle: composite
  body:
  - name: mainApp
    block: nearestprime/main
    siteClasses:
    - hq
  - name: requestIngress
    block: nearestprime/ingress
    siteClasses:
    - hq
  - name: request-ingress-to-main
    block: library/tcp-connection
    config:
      keyPrefix: http-ingress
      protocol: http
      connectorType: selector
      networkPolicyOnConnector: false
    bindings:
    - interface: acceptor
      block: mainApp
      blockInterface: request
    - interface: connector
      block: requestIngress
      blockInterface: connector

---
apiVersion: skupperx.io/compose/v1alpha1
kind: Block
metadata:
  name: nearestprime/ingress
type: skupperx.io/ingress
spec:
  config:
    serviceName: np-control.test
    namePrefix: control
  interfaces:
  - name: connector
    role: connect
    data:
      host: nprime
      port: 8000
  bodyStyle: simple
  body:
  - template: |
      ---
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: {{.namePrefix}}-{{.ident}}
      spec:
        ingressClassName: nginx
        rules:
          - host: {{.serviceName}}
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: {{$localif.connector.host}}
                      port:
                        number: {{$localif.connector.port}}
